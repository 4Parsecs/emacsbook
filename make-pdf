#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
load 'make-common'

def usage
	puts <<USAGE
Usage:
  make-pdf [markdown]

Options:
  -d, --debug   : debuging
USAGE
	exit
end

def latex_pre_pandoc(string, config)
  replace(string) do
    # Inc one category depth
    s /^\#/, '##'

    # title
    s /^%[ ]*title:(.*)/, '# \1'

    # fix image path
    #  XXX. direct to specially crafted image folder for pdf
    s '../img/', 'img/'
  end
end


# enforce
lang = "ko"

figures do
  config = $config['default'].merge($config["ko"])

  markdown = Dir["#$root/chap*/doc.markdown"].sort.map do |file|
    File.read(file)
  end.join("\n\n")

  print "\tParsing markdown... "
  latex = pipe('pandoc -p --no-wrap -f markdown -t latex') do |stdin, stdout, stderr|
    # latex specific pre-processing
    markdown = latex_pre_pandoc(markdown, config)
    
    # common pre-processing
    stdin.write(pre_pandoc(markdown, config))
    stdin.close
    post_pandoc(stdout.read, config)
  end
  puts "done"
  
  print "\tCreating main.tex ... "
  dir = "#$here/latex"
  File.open("#{dir}/main.tex", 'w') do |file|
    file.write($latex_template.result(binding))
  end
  puts "done"

  abort = false

  puts "\tRunning XeTeX:"
  cd($root)
  3.times do |i|
    print "\t\tPass #{i + 1}... "
    pipe("xelatex -output-directory='#{dir}' '#{dir}/main.tex' 2>&1") do |_, stdout|
      unless $DEBUG
        if ~ /^!\s/
          puts "failed with:\n\t\t\t#{$_.strip}"
          puts "\tConsider running this again with --debug."
          abort = true
        end while stdout.gets and not abort
      else
        STDERR.print while stdout.gets rescue abort = true
      end
    end
    break if abort
    puts "done"
  end
end
